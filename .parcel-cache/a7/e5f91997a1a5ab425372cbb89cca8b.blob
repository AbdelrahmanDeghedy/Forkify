var _modelJs = require('./model.js');
var _viewsRecipeView = require('./views/recipeView');
var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
var _viewsRecipeViewDefault = _parcelHelpers.interopDefault(_viewsRecipeView);
var _urlImgIconsSvg = require('url:../img/icons.svg');
var _urlImgIconsSvgDefault = _parcelHelpers.interopDefault(_urlImgIconsSvg);
require("core-js/stable");
require("regenerator-runtime/runtime");
var _viewsRecipeViewDefault = _parcelHelpers.interopDefault(_viewsRecipeView);
const recipeContainer = document.querySelector('.recipe');
const timeout = function (s) {
  return new Promise(function (_, reject) {
    setTimeout(function () {
      reject(new Error(`Request took too long! Timeout after ${s} second`));
    }, s * 1000);
  });
};
// https://forkify-api.herokuapp.com/v2
// /////////////////////////////////////
const renderSpinner = function (parentEl) {
  const markup = `
    <div class="spinner">
    <svg>
      <use href="${_urlImgIconsSvgDefault.default}#icon-loader"></use>
    </svg>
  </div>
  `;
  parentEl.innerHTML = '';
  parentEl.insertAdjacentHTML('afterbegin', markup);
};
const showRecipe = async function () {
  try {
    const id = window.location.hash.slice(1);
    console.log(id);
    if (!id) return;
    // render spinner during loading the recipe
    renderSpinner(recipeContainer);
    await _modelJs.loadRecipe(id);
    const {recipe} = _modelJs.state;
    // Rendering the recipe
    _viewsRecipeViewDefault.default.render(_modelJs.state.recipe);
  } catch (err) {
    alert(err);
  }
};
let events = ["hashchange", "load"];
events.forEach(event => {
  window.addEventListener(event, showRecipe);
});
